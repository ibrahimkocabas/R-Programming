sqrt(v)
v <- 1:10
y <- 2:11
v + y
v / y
sqrt(v)
sum(v)
mean()
median()
sum(v)
mean(v)   #
v^2
v^3
min(v)
max(v)
cumsum(v)
v1 <- c(3,4,6,8,5)
v2 <- c(4,8,4,7,1)
v3 <- c(2,2,5,4,6)
v4 <- c(4,7,5,2,5)
# sutunlar bazinda toplama islemi
v <- cbind(v1,v2,v3,v4)
v
matrix(1:4, nrow = 2, ncol = 2)
matrix(1:9, nrow = 3, ncol = 3)
matrix(1:9, nrow = 3, ncol = 3, byrow = TRUE)
matrix(c(32,16,34,28,66,17), nrow = 2, ncol = 3)
matrix(c(1,2,3,11,22,33,111,222,333), 3, 3)
m <- matrix(c(1,2,3,11,22,33,111,222,333), 3, 3)
dim(m)
matrix(rep(1:3, 3), nrow = 3, ncol=3)
m <- matrix(rep(1:3, 3), nrow = 3, ncol=3)
table(m)
m1 <- rnorm(16)
m1
m1 <- rnorm(16)  # normal dagilimli kitle
m1 <- matrix(m1, nrow = 4, ncol = 4)
m2 <- rnorm(16, 90, 10) # normal dagilimli kitle ,ortalama 90, standart sapma 10
m2 <- matrix(m2, nrow = 4, ncol = 4)
rbind(m1,m2)
# sutun
cbind(m1,m2)
M <- matrix(c(1,2,11,22,111,222,1111,2222), nrow = 4, ncol = 2, byrow = TRUE)
colnames(M) <- c("bir","iki")
rownames(M) <- c("rakam","onlar","yuzler","binler")
M
M[1,1]
M[3,1]
M[1, ]
M[1:2, ]
M[c(1,4), ]
M[ ,1]
M[ ,1:2]
m <- matrix(rnorm(25), nrow = 10, ncol = 10)
m[1:2, 9,10]
m[1:2, 9:10]
colnames(m) <- c(paste("sutun"), 1:10, sep = "_")
colnames(m) <- c(paste("sutun"), 1:10, sep = "_"))
colnames(m) <- c(paste("sutun", 1:10, sep = "_"))
rownames(m) <- c(paste("satir", 1:10, sep = "_"))
View(m)
m[ , "sutun_7"]
m["satir_7", ]
# buyuk ölcekli bir matris olusturuyoruz.
m <- matrix(1:1000, 50, 10)
# kolon isimlerini degisken olarak degistiyoruz.
colnames(m) <- c(paste("degisken", 1:10, sep = "_"))
View(m)
View(m)
colnames(m) <- as.character(round(sqrt(apply(m,2,mean))))
View(m)
m <- matrix(1:25, nrow = 5, ncol = 5)
m[, 1]
m[, 1] > 2
m[m[, 1] > 2]
m[m[, 1] > 2, ]
m[ m[, 1] > mean(m[, 1]), 1]
m[ m[,2] < mean(m[,4], 4)]
# degerleri 4.sutun ortalamasindan kucuk olan 2.sutunun degerleri
m[ m[, 2] <  mean(m[, 4]), 2]
A <- matrix(1:9, 3, 3)
B <- matrix(1:9, 3, 3)
A + B
A + B
A - B
A * B
A / B
View(A)
A[1,2] + B[3,3]
sum(A)
mean(A)
rowSums(A)
View(A)
colSums(A)
rowMeans(B)
colMeans(B)
A <- matrix(1:9 , 3, 3)
diag(A)
A
sum(diag(A))
I <- diag(c(1,1,1))
I
matrix(c(2,1,3,1,2,1,3,1,0), 3, 3)
# Tranpose alma(tersi)
t(A)
det(A)
det(matrix(c(0,1,1,1), nrow = 2))
A <- matrix(1:9 , 3, 3)
B <- matrix(1:9 , 3, 3)
A %*% A
View(A)
# Tranpose alma - Sutun degerleri satirlar olarak gelir.
t(A)
solve(matrix(c(3,4,5,8)), 2, 2)
solve(matrix(c(3,4,5,8), 2, 2))
library(readr)
hsb <- read_table2("hsb.txt")
View(hsb)
hsb <- na.omit(hsb)
# bagimli degisken olusturma
y <- matrix(hsb$write, ncol = 1)
y[1:10]
y[1:10, 1]
# bagimli degisken olusturma
y <- matrix(hsb$write, ncol = 1)
y
# bagimsiz degisken alma
x <- as.matrix(c(1, hsb$math, hsb$science, hsb$socst, hsb$female))
summary(lm(write ~ math + science + socst + female, hsb))
n <- nrow(x)
p <- ncol(x)
# bagimsiz degisken alma
x <- as.matrix(cbind(1, hsb$math, hsb$science, hsb$socst, hsb$female))
solve(t(x) %*% x) %*% t(x) %*% y # [X'X]^-1 -- solve fonksiyonu ile tersini alma icerisine ise x'in tranpose ile kendisinin matirs olarak carpimi daha sonra disarisinda yine x degerinin tranpose ile y carpimi
summary(lm(write ~ math + science + socst + female, hsb))
# veri setini okutma
hsb <- read_table2("hsb.txt")
hsb <- na.omit(hsb)  # veriseti içindeki eksik gözlemleri silme
# bagimli degisken olusturma
y <- matrix(hsb$write, ncol = 1)
# bagimsiz degisken alma
x <- as.matrix(cbind(1, hsb$math, hsb$science, hsb$socst, hsb$female))
n <- nrow(x)
p <- ncol(x)
solve(t(x) %*% x) %*% t(x) %*% y # [X'X]^-1 -- solve fonksiyonu ile tersini alma icerisine ise x'in tranpose ile kendisinin matirs olarak carpimi daha sonra disarisinda yine x degerinin tranpose ile y carpimi
summary(lm(write ~ math + science + socst + female, hsb))
library(readr)
hsb <- read_table2("hsb.txt")
View(hsb)
hsb <- na.omit(hsb)  # veriseti içindeki eksik gözlemleri silme
# bagimli degisken olusturma
y <- matrix(hsb$write, ncol = 1)
y
# bagimsiz degisken alma
x <- as.matrix(cbind(1, hsb$math, hsb$science, hsb$socst, hsb$female))
solve(t(x) %*% x) %*% t(x) %*% y # [X'X]^-1 -- solve fonksiyonu ile tersini alma icerisine ise x'in tranpose ile kendisinin matirs olarak carpimi daha sonra disarisinda yine x degerinin tranpose ile y carpimi
summary(lm(write ~ math + science + socst + female, hsb))
hsb <- na.omit(hsb)  # veriseti içindeki eksik gözlemleri silme
# Amacimiz regresyon modellemesi yaparak katsayi degerlerini bulmak
hsb <- na.omit(hsb)  # veriseti içindeki eksik gözlemleri silme
# bagimli degisken olusturma
y <- matrix(hsb$write, ncol = 1)
y
# bagimsiz degisken alma
x <- as.matrix(cbind(1, hsb$math, hsb$science, hsb$socst, hsb$female))
# serbestlik derecesi hesaplamasi icin gerekli
n <- nrow(x)
p <- ncol(x)
# Formulden yola cikarak elimizdeki x degerinin tranpose ve tersi alma islemini gerceklestirerek regresyon katsayilarini bulalim.
solve(t(x) %*% x) %*% t(x) %*% y # [X'X]^-1 -- solve fonksiyonu ile tersini alma icerisine ise x'in tranpose ile kendisinin matirs olarak carpimi daha sonra disarisinda yine x degerinin tranpose ile y carpimi
# Bulunan degerlerden 1.olan sabit deger, digerleri ise secmis oldugumuz bagimsiz degiskenlerin katsayilaridir.
# Denklemsel gösterim --> 4.3 + 0.23x1 + 0.38x2 + 0.31x3 - 0.01x4 ...
#########################################################################
# R icersindeki lineer model - lm() fonksiyonu ile olusturulan dogrusal model ciktisi
summary(lm(write ~ math + science + socst + female, hsb))
hsb <- na.omit(hsb)  # veriseti içindeki eksik gözlemleri silme
# bagimli degisken olusturma
y <- matrix(hsb$write, ncol = 1)
# bagimsiz degisken alma
x <- as.matrix(cbind(1, hsb$math, hsb$science, hsb$socst, hsb$female))
n <- nrow(x)
p <- ncol(x)
solve(t(x) %*% x) %*% t(x) %*% y # [X'X]^-1 -- solve fonksiyonu ile tersini alma icerisine ise x'in tranpose ile kendisinin matirs olarak carpimi daha sonra disarisinda yine x degerinin tranpose ile y carpimi
summary(lm(write ~ math + science + socst + female, hsb))
View(hsb)
getwd()
read.table("C:/Users/lenovo/Desktop/R Programlama/veri_tipleri_ve_fonksiyonel_programalama/hsb.txt")
hsb <- read.table("C:/Users/lenovo/Desktop/R Programlama/veri_tipleri_ve_fonksiyonel_programalama/hsb.txt")
hsb <- na.omit(hsb)  # veriseti içindeki eksik gözlemleri silme
# bagimli degisken olusturma
y <- matrix(hsb$write, ncol = 1)
y
# bagimsiz degisken alma
x <- as.matrix(cbind(1, hsb$math, hsb$science, hsb$socst, hsb$female))
solve(t(x) %*% x) %*% t(x) %*% y # [X'X]^-1 -- solve fonksiyonu ile tersini alma icerisine ise x'in tranpose ile kendisinin matirs olarak carpimi daha sonra disarisinda yine x degerinin tranpose ile y carpimi
hsb <- read.table("C:/Users/lenovo/Desktop/R Programlama/veri_tipleri_ve_fonksiyonel_programalama/hsb.txt")
hsb <- na.omit(hsb)  # veriseti içindeki eksik gözlemleri silme
# bagimli degisken olusturma
y <- matrix(hsb$write, ncol = 1)
y
# bagimsiz degisken alma
x <- as.matrix(cbind(1, hsb$math, hsb$science, hsb$socst, hsb$female))
n <- nrow(x)
p <- ncol(x)
solve(t(x) %*% x) %*% t(x) %*% y # [X'X]^-1 -- solve fonksiyonu ile tersini alma icerisine ise x'in tranpose ile kendisinin matirs olarak carpimi daha sonra disarisinda yine x degerinin tranpose ile y carpimi
summary(lm(write ~ math + science + socst + female, hsb))
library(readr)
hsb <- read_table2("hsb.txt")
View(hsb)
library(readr)
hsb <- read_table2("hsb.txt")
hsb <- na.omit(hsb)  # veriseti içindeki eksik gözlemleri silme
# bagimli degisken olusturma
y <- matrix(hsb$write, ncol = 1)
# bagimsiz degisken alma
x <- as.matrix(cbind(1, hsb$math, hsb$science, hsb$socst, hsb$female))
solve(t(x) %*% x) %*% t(x) %*% y # [X'X]^-1 -- solve fonksiyonu ile tersini alma icerisine ise x'in tranpose ile kendisinin matirs olarak carpimi daha sonra disarisinda yine x degerinin tranpose ile y carpimi
summary(lm(write ~ math + science + socst + female, hsb))
list("Ibrahim","Mesele veriden faydali bilgi cikarmak",1:10, 32, 1025.99, FALSE)
list("Ibrahim","Mesele veriden faydali bilgi cikarmak",1:10, 32, 1025.99, FALSE)
liste_bir <- list("Besiktas","Veri Bilimi", 1:10, 32, 4032,77, FALSE)
liste_iki <- list("R Studio","Python")
c(liste_bir,liste_iki)
liste <- list(c("siyah","beyaz","sampiyon","besiktas"),
matrix(1:9, 3, 3),
list("baska bir liste", 1:10)
)
liste
names(liste) <- c("Super Lig","matris","karisik")
View(liste)
liste <- list(c("siyah","beyaz","sampiyon","besiktas"),
matrix(1:9, 3, 3),
list("baska bir liste", 1:10)
)
names(liste) <- c("Super Lig","matris","karisik")
names(liste) <- c("Super Lig","matris","karisik")
liste <- list(c("siyah","beyaz","sampiyon","besiktas"),
matrix(1:9, 3, 3),
list("baska bir liste", 1:10)
)
names(liste) <- c("Super Lig","matris","karisik")
liste <- list(c("siyah","beyaz","sampiyon","besiktas"),
matrix(1:9, 3, 3),
list("baska bir liste", 1:10)
)
names(liste) <- c("Super Lig","matris","karisik")
liste[1]
liste$matris
liste[4] <- "1903"
liste
liste[4] <- "Ibrahim Kocabas"
liste[4]
liste[4] <- NULL
liste
# Eleman Degistirme / Guncelleme
liste[3] <- "bu artık listenin 3.elemanidir."
liste
# Eleman Degistirme / Guncelleme
liste[3] <- c("bu artık listenin 3.elemanidir.", 1:5)
# Eleman Degistirme / Guncelleme
liste[3] <- list("bu artık listenin 3.elemanidir.", 1:5)
# Eleman Degistirme / Guncelleme
liste[3] <- ("bu artık listenin 3.elemanidir." , 1:5)
# Eleman Degistirme / Guncelleme
liste[3] <- ("bu artık listenin 3.elemanidir.", 1:5)
# Eleman Degistirme / Guncelleme
liste[3] <- "bu artık listenin 3.elemanidir." 1:5
# Eleman Degistirme / Guncelleme
liste[3] <- " bu artık listenin 3.elemanidir."
liste
la <- list(1:15)
lb <- liste(10:14)
a <- unlist(la)
typeof(a)
is.vector(a)
liste$matris * 2
toupper(liste$`Super Lig`)
unlist(la) * 2
list(bir = 1:10, kare = (1:10)^2, kup = (1:10)^3)
l <- list(bir = 1:10, kare = (1:10)^2, kup = (1:10)^3)
lapply(l, mean)
lapply(l, sum)
lapply(l, function(x) x / 2)
lapply(c(1,2,3), function(x) matrix(rnorm(9), 3,3))
df <- data.frame(
magaza_no = c(1:5),
semt = c("Mecidiyekoy","Besiktas","Kadikoy","Etiler","Kartal"),
ortalama_kazanc = c(60, 75, 48, 95, 57)
)
View(df)
str(df)
summary(df)
nrow(df)
ncol(df)
View(df)
dim(df)
df <- data.frame(
magaza_no = c(1:5),
semt = c("Mecidiyekoy","Besiktas","Kadikoy","Etiler","Kartal"),
ortalama_kazanc = c(60, 75, 48, 95, 57)
)
df2 <- data.frame(
magaza_no = c(1:5),
gecmis_yil = c(2,3,4,5,6),
personel_sayisi = c(23,12,35,40,14)
)
merge(df, df2)
merge(df, df2, by = "magaza_no")
df_all <- merge(df, df2, by = "magaza_no")
df_all
df_all$ortalama_musteri <- c(12,34,21,18,45)
View(df_all)
df_all$urun_turu <- c("Ayakkabi","Canta","Kazak","Tshirt","Gömlek")
View(df_all)
df_all$personel_basina_kazanc <- df_all$ortalama_kazanc / df_all$personel_sayisi
View(df_all)
df
rbind(df, c(6,"Beyoglu",84))
df[-6]
df[-6,]
df[1:5, ]
df
colnames(df) <- c("n","s","k")
rownames(df) <- c("bir","iki","uc","dort","bes")
df
df <- df[, c("n","k")]
df
df <- data.frame(
magaza_no = c(1:5),
semt = c("Mecidiyekoy","Besiktas","Kadikoy","Etiler","Kartal"),
ortalama_kazanc = c(60, 75, 48, 95, 57)
)
df
library(dplyr)
install.packages(c("callr", "haven", "highr", "tibble", "withr"))
install.packages("dplyr")
library(dplyr)
library(dplyr)
df %>% remove_rownames %>% column_to_rownames(var = "semt")
df %>% remove_rownames %>% column_to_rownames(var = "semt")
library(tibble)
df %>% remove_rownames %>% column_to_rownames(var = "semt")
df <- df %>% remove_rownames %>% column_to_rownames(var = "semt")
df
m <- matrix(1:9, 3,3)
as.data.frame(m)
df <- as.data.frame(m)
sayi <- c(1,2,3)
harf <- c("a","b","c")
log <- c(TRUE,FALSE,TRUE)
liste <- list(sayi,harf,log)
liste
as.data.frame(liste)
View(df_all)
str(df_all)
View(df_all)
df_all$urun_turu <- factor(df_all$urun_turu)
str(df_all)  # degisken turlerine bakma
df_all$ortalama_musteri <- as.integer(df_all$ortalama_musteri)
df_all
str(df_all)
df_all$semt <- factor(df_all$semt)
str(df_all)
df_all$semt <- factor(df_all$semt, ordered = TRUE)
str(df_all)
mpg
library(ggplot2)
mpg
summary(mpg)
str(mpg)
mpg$manufacturer
mpg$model
attach(mpg)
model
mtcars
mtcars
mpg$model  # modeller
data.frame(mpg$manufacturer, mpg$model)
head(data.frame(mpg$manufacturer, mpg$model))
head(data.frame(mpg$manufacturer, mpg$model), 10)
degiskenler <- c("model","year","cyl")
data <- mpg[degiskenler]
View(data)
mpg
data <- mpg[degiskenler]
data
mpg[1:10]
mpg[1,1]
mpg[mpg$manufacturer == "Audi" & mpg$cyl == "6", ]
mpg[mpg$manufacturer == "audi" & mpg$cyl == "6", ]
mpg[mpg$manufacturer == "audi" & mpg$cyl == "6" & mpg$year > 1999 ,  ]
df_all
df_all[order(df_all$semt, decreasing = TRUE), ]
df_all[order(df_all$gecmis_yil, decreasing = TRUE), ]
df_all$ortalama_kazanc * 10
apply(matrix(1:9, nrow = 3,ncol = 3), 1, meean)
apply(matrix(1:9, nrow = 3,ncol = 3), 1, mean)
fap <- mpg[, c("disply","cyl","sty")]
library(ggplot2)
mpg  # veri seti
fap <- mpg[, c("disply","cyl","sty")]
fap <- mpg[, c("displ","cyl","cty")]
apply(fap, 1, sum)
apply(fap, 2, sum)
bos <- NULL;
for (i in 1:nrow(fap)) {
a <- sum(fap[i,])
bos <- rbind(bos,a)
}
View(bos)
View(bos)
View(bos)
install.packages(c("brio", "haven", "knitr"))
install.packages("microbenchmark")
library(microbenchmark)
source("for.R")
microbenchmark(source("for.R"), apply(fap, 1, sum))
microbenchmark(source("for.R"), apply(fap, 1, sum))
l <- list( a = rnorm(90),
b = rbeta(10,1,2),
c = 1:5000
)
l <- list( a = rnorm(90),
b = rbeta(10,1,2),
c = 1:5000
)
lapply(l, mean)
sapply(l, mean)
k <- sapply(l, mean)
k
vapply(1:10, sqrti double(1))
vapply(1:10, sqrt, double(1))
vapply(1:10, sqrt)
vapply(1:10, sqrt, integer(1))
vapply(1:10, sqrt, double(1))
tapply(mpg$cyl, mpg$class, mean)
tapply(mpg$cyl, mpg$class, mean)
mpg  # veri seti
library(ggplot2)
mpg  # veri seti
str(mpg)
tapply(mpg$cyl, mpg$class, mean)
by(mpg[, c("displ","cty","hwy")], mpg$cyl, colMeans)
library(ggplot2)
mpg
library(purrr)
mapp <- mpg[, c("displ","cty","hwy")]
map_dbl(mapp,mean)
library(dplyr)
mtcars
mtcars %>%
split(.$cyl) %>%
map( ~ lm(mpg ~ wt, data = .)) %>%
map(summary) %>%
map_dbl("r.squared")
mtcars %>%
split(.$cyl)
tibble(
a = 1:1000,
b = 1:1000
)
as_tibble(iris)
df <- df %>% remove_rownames %>% column_to_rownames(var = "semt")
df
colnames(df) <- c("n","s","k")
rownames(df) <- c("bir","iki","uc","dort","bes")
df
df
library(dplyr)
df <- df %>% remove_rownames %>% column_to_rownames(var = "semt")
df
df <- data.frame(
magaza_no = c(1:5),
semt = c("Mecidiyekoy","Besiktas","Kadikoy","Etiler","Kartal"),
ortalama_kazanc = c(60, 75, 48, 95, 57)
)
df2 <- data.frame(
magaza_no = c(1:5),
gecmis_yil = c(2,3,4,5,6),
personel_sayisi = c(23,12,35,40,14)
)
merge(df, df2)
merge(df, df2, by = "magaza_no")
df_all <- merge(df, df2, by = "magaza_no")
df_all
df_all$ortalama_musteri <- c(12,34,21,18,45)
df_all$urun_turu <- c("Ayakkabi","Canta","Kazak","Tshirt","Gömlek")
df
rbind(df, c(6,"Beyoglu",84))
df[-6]
df
colnames(df) <- c("n","s","k")
rownames(df) <- c("bir","iki","uc","dort","bes")
df <- df[, c("n","k")]
df <- df %>% remove_rownames %>% column_to_rownames(var = "semt")
df <- data.frame(
magaza_no = c(1:5),
semt = c("Mecidiyekoy","Besiktas","Kadikoy","Etiler","Kartal"),
ortalama_kazanc = c(60, 75, 48, 95, 57)
)
library(dplyr)
df <- df %>% remove_rownames %>% column_to_rownames(var = "semt")
df
df <- df %>% remove_rownames %>% column_to_rownames(var = "semt")
source("for.R")
microbenchmark(source("for.R"), apply(fap, 1, sum))
library(microbenchmark)
microbenchmark(source("for.R"), apply(fap, 1, sum))
microbenchmark(source("for.R"), apply(fap, 1, sum))
library(rmarkdown)
detach("package:rmarkdown", unload = TRUE)
library(rmarkdown)
